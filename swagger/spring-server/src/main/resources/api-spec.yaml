swagger: '2.0'
info:
  version: '0.1.0'
  title: Fruits API
  description: An API to demonstrate Swagger and Spring Boot
host: localhost:8080
basePath: /api
schemes:
  - http
paths:
  /fruits:
    post:
      description: create a fruit
      operationId: createFruit
      consumes:
        - application/json
      parameters:
        - name: fruit
          in: body
          required: true
          schema:
            $ref: '#/definitions/Fruit'
      responses:
        '201':
          description: created
          schema:
            type: object
    get:
      description: get the list of all fruits
      operationId: getFruits
      produces:
        - application/json
      responses:
        '200':
          description: success
          schema:
            type: array
            items:
              $ref: '#/definitions/Fruit'

  /fruits/{id}:
    get:
      description: get the list of all fruits
      operationId: getFruitById
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int64
      produces:
        - application/json
      responses:
        '200':
          description: success
          schema:
              $ref: '#/definitions/Fruit'
    delete:
      description: delete a fruit
      operationId: deleteFruit
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int64
      responses:
        '201':
          description: deleted
    patch:
      description: update a fruit
      operationId: updatefruit
      consumes:
        - application/json
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int64
        - name: fruit
          in: body
          required: true
          schema:
            $ref: '#/definitions/Fruit'
      responses:
        '201':
          description: updated
          schema:
            type: object
  /fruits/byAlphabeticalOrder:
    get:
      description: get fruits sorted by alphabetical order
      operationId: getFruitByAlphabeticalOrder
      produces:
        - application/json
      responses:
        '201':
          description: success
          schema:
            type: array
            items:
              $ref: '#/definitions/Fruit'
  /vegetables:
    get:
      description: get the list of all vegetables
      operationId: getVegetables
      produces:
        - application/json
      responses:
        '200':
          description: success
          schema:
            type: array
            items:
              $ref: '#/definitions/Vegetable'
    post:
      description: create a vegetable
      operationId: createVegetable
      consumes:
        - application/json
      parameters:
        - name: vegetable
          in: body
          required: true
          schema:
            $ref: '#/definitions/Vegetable'
      responses:
        '201':
          description: created
          schema:
            type: object
  /vegetables/{id}:
    delete:
      description: delete a vegetable
      operationId: deleteVegetable
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int64
      responses:
          '201':
            description: deleted
definitions:
  Fruit:
    type: object
    properties:
      kind:
        type: string
      colour:
        type: string
      size:
        type: string
      weight:
        type: string
  Vegetable:
    type: object
    properties:
      kind:
        type: string
      colour:
        type: string
      size:
        type: string
      weight:
        type: string